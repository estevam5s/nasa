name: "Docker"

on:
  workflow_dispatch:
    inputs:
      newVersion:
        description: "Version to publish: v[MAJOR].[MINOR].[PATCH]"
        required: true
        default: '0.0.0'

env:
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  GITHUB_EMAIL: ${{ secrets.GH_EMAIL }}
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: "‚öô Set up Node.js"
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: "‚úÖ Checkout repository"
        uses: actions/checkout@v2

  release:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "üíæ Restore Dependencies from cache"
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: "üì¶ Install packages"
        run: npm install

      - name: "üíÖ Lint"
        run: npm run lint

      - name: "üî® Build"
        run: npm run build

      - name: "üë®‚Äçüíª Run Test"
        run: npm run test
        env:
          NODE_ENV: 'test'

      - name: "üìä Upload coverage report to Codecov"
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: "üìä SonarCloud Scan"
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=${{ github.repository_owner }}
            -Dsonar.projectKey=${{ github.repository_owner }}_${{ github.event.repository.name }}
            -Dsonar.projectName=${{ github.repository_owner }}_${{ github.event.repository.name }}
            -Dsonar.projectVersion=1.0
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.sources=./src
            -Dsonar.exclusions=**/*.bin,node_modules/**,test/**,**/__test__/**,**/__mocks__/**,src/main.ts
            -Dsonar.coverage.exclusions=node_modules/**,test/**,**/__test__/**,**/__mocks__/**,src/main.ts
            -Dsonar.testExecutionReportPaths=test-report.xml
            -Dsonar.typescript.lcov.reportPaths=./coverage/lcov.info
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: "üê≥ Docker login"
        run: |
          docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}

      - name: "üê≥ Docker build"
        run: |
          docker build -t ${{ github.event.repository.name }} .

      - name: "üê≥ Docker tag"
        run: |
          docker tag ${{ github.event.repository.name }} ${DOCKER_USER}/${{ github.event.repository.name }}:${{ github.sha }}
          docker tag ${{ github.event.repository.name }} ${DOCKER_USER}/${{ github.event.repository.name }}:latest

      - name: "üê≥ Docker push"
        run: |
          docker push ${DOCKER_USER}/${{ github.event.repository.name }}:${{ github.sha }}
          docker push ${DOCKER_USER}/${{ github.event.repository.name }}:latest
